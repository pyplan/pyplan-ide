/*! Copyright Pyplan 2020. All rights reserved. */
(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{730:function(n,e,o){"use strict";(function(t){var a;void 0===(a=function(){return t.Controller.extend({name:"workflow",show:function(){Promise.all([o.e(22),o.e(27),o.e(38),o.e(94),o.e(99)]).then((function(){var n=[o(1558)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskGroups:function(){Promise.all([o.e(22),o.e(27),o.e(38),o.e(40),o.e(104)]).then((function(){var n=[o(1626)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskItemStatuses:function(){Promise.all([o.e(22),o.e(27),o.e(38),o.e(40),o.e(105)]).then((function(){var n=[o(1627)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskItemStatusTransitions:function(){Promise.all([o.e(22),o.e(27),o.e(40),o.e(151)]).then((function(){var n=[o(1628)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskItemHistoryModal:function(n){o.e(122).then((function(){var e=[o(1629)];(function(e){(new e).render(n)}).apply(null,e)})).catch(o.oe)}})}.apply(e,[]))||(n.exports=a)}).call(this,o(688))}}]);