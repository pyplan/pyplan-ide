/*! Copyright Pyplan 2020. All rights reserved. */
(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{721:function(n,e,o){"use strict";(function(t){var a;void 0===(a=function(){return t.Controller.extend({name:"workflow",show:function(){Promise.all([o.e(20),o.e(23),o.e(38),o.e(94),o.e(99)]).then((function(){var n=[o(1593)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskGroups:function(){Promise.all([o.e(20),o.e(23),o.e(38),o.e(82),o.e(102)]).then((function(){var n=[o(1638)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskItemStatuses:function(){Promise.all([o.e(20),o.e(23),o.e(38),o.e(82),o.e(103)]).then((function(){var n=[o(1639)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskItemStatusTransitions:function(){Promise.all([o.e(20),o.e(23),o.e(108)]).then((function(){var n=[o(1640)];(function(n){(new n).render()}).apply(null,n)})).catch(o.oe)},showTaskItemHistoryModal:function(n){o.e(123).then((function(){var e=[o(1641)];(function(e){(new e).render(n)}).apply(null,e)})).catch(o.oe)}})}.apply(e,[]))||(n.exports=a)}).call(this,o(676))}}]);