/*! Copyright Pyplan 2020. All rights reserved. */
(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{1112:function(n,e,t){"use strict";(function(s,a){var i,r;i=[t(1415),t(1416)],void 0===(r=function(n,e){return s.View.extend({el:a("#main"),inTest:!1,render:function(){var t=this;(new n).getTests(function(n){var s=e(n);t.$el.append(s),t.addHandlers()})},addHandlers:function(){var e=this;this.$el.find(".mainTask .btnRun").on("click",function(){e.inTest||(e.$el.find(".mainTask .box-content dl dd .result").text("..."),e.inTest=!0,(new n).runTests(function(n){e.inTest=!1,e.renderResult(n)},function(){e.inTest=!1}))})},renderResult:function(n){var e=this.$el.find(".mainTask .box-content dl");e.find("dd .result").empty(),a.each(n,function(n,t){if("group"!=t.checkType){var s='<span class="sanity_##res##"><i class="fa fa-##res##"></i> ##message##</span>',i="";"1"==t.pass?i="check":"-1"==t.pass&&(i="remove"),s=s.replace("##res##",i).replace("##res##",i).replace("##message##",t.result),a(s).appendTo(e.find("dd[data-code='"+t.code+"'] .result"))}})}})}.apply(e,i))||(n.exports=r)}).call(this,t(218),t(1))},1415:function(n,e,t){"use strict";(function(s){var a,i=t(693);void 0===(a=function(){return s.Model.extend({getTests:function(n,e){(0,i.send)("SanityCheck/getTests",null,null,n,e)},runTests:function(n,e){(0,i.send)("SanityCheck/runTests",null,null,n,e)}})}.apply(e,[]))||(n.exports=a)}).call(this,t(218))},1416:function(n,e,t){var s=t(690);function a(n){return n&&(n.__esModule?n.default:n)}n.exports=(s.default||s).template({1:function(n,e,s,i,r){var l;return null!=(l=a(t(689)).call(null!=e?e:n.nullContext||{},null!=e?e.checkType:e,"==","group",{name:"ifCond",hash:{},fn:n.program(2,r,0),inverse:n.program(4,r,0),data:r,loc:{start:{line:13,column:28},end:{line:18,column:39}}}))?l:""},2:function(n,e,t,s,a){return"                                <dt></dt>\n                                <dt>"+n.escapeExpression(n.lambda(null!=e?e.name:e,e))+"</dt>\n"},4:function(n,e,t,s,a){var i=n.lambda,r=n.escapeExpression;return'                                <dd data-code="'+r(i(null!=e?e.code:e,e))+'">'+r(i(null!=e?e.name:e,e))+' <span class="result"></span></dd>\n'},compiler:[8,">= 4.3.0"],main:function(n,e,s,i,r){var l,c=null!=e?e:n.nullContext||{},u=n.escapeExpression;return'<div class="abm-base-tmp container-fluid mainTask" data-rel="sanity-check" data-type="tab-content" >\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="box box-bordered box-color">\n                <div class="box-title">\n                    <h3><i class="fa fa-th-list"></i>'+u(a(t(688)).call(c,"sanity_check",{name:"L",hash:{},data:r,loc:{start:{line:6,column:53},end:{line:6,column:73}}}))+'</h3>\n                </div>\n                <div class="box-content">\n\n\n                    <dl>\n'+(null!=(l=s.each.call(c,e,{name:"each",hash:{},fn:n.program(1,r,0),inverse:n.noop,data:r,loc:{start:{line:12,column:24},end:{line:19,column:33}}}))?l:"")+'\n                    </dl>\n\n                    <button class="btnRun btn btn-red">'+u(a(t(688)).call(c,"run_sanity_check",{name:"L",hash:{},data:r,loc:{start:{line:23,column:55},end:{line:23,column:79}}}))+"</button>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"},useData:!0})},688:function(n,e,t){"use strict";var s=t(18);n.exports=function(n){return(0,s.translate)(n)}},689:function(n,e,t){"use strict";n.exports=function(n,e,t,s){switch(e){case"==":return n==t?s.fn(this):s.inverse(this);case"!=":return n!=t?s.fn(this):s.inverse(this);case"===":return n===t?s.fn(this):s.inverse(this);case"<":return n<t?s.fn(this):s.inverse(this);case"<=":return n<=t?s.fn(this):s.inverse(this);case">":return n>t?s.fn(this):s.inverse(this);case">=":return n>=t?s.fn(this):s.inverse(this);case"&&":return n&&t?s.fn(this):s.inverse(this);case"||":return n||t?s.fn(this):s.inverse(this);default:return s.inverse(this)}}}}]);