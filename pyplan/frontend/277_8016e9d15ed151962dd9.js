/*! Copyright Pyplan 2020. All rights reserved. */
(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{747:function(t,n,e){"use strict";(function(o){var p,s=e(693);void 0===(p=function(){return o.Model.extend({list:function(t,n){var e=null!=t?"?company_id=".concat(t):"";(0,s.send)("groups/".concat(e),null,{type:"GET",contentType:"application/json;charset=utf-8",dataType:"text"},n)},get:function(t,n){(0,s.send)("groups/".concat(t,"/"),null,{type:"GET",contentType:"application/json;charset=utf-8",dataType:"text"},n)},update:function(t,n,e){(0,s.send)("groups/".concat(t,"/"),JSON.stringify(n),{type:"PUT",contentType:"application/json;charset=utf-8",dataType:"text"},e)},create:function(t,n){(0,s.send)("groups/",JSON.stringify(t),{type:"POST",contentType:"application/json;charset=utf-8",dataType:"text"},n)},delete:function(t,n){(0,s.send)("groups/".concat(t,"/"),null,{type:"DELETE"},n)},listPermissions:function(t){(0,s.send)("permissions/",null,{type:"GET",contentType:"application/json;charset=utf-8",dataType:"text"},t)},updateGroupPermissions:function(t,n){(0,s.send)("groups/update_groups_permissions/",JSON.stringify(t),{type:"PATCH",contentType:"application/json;charset=utf-8",dataType:"text"},n)}})}.apply(n,[]))||(t.exports=p)}).call(this,e(218))}}]);