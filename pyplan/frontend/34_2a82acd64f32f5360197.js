/*! Copyright Pyplan 2020. All rights reserved. */
(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{707:function(e,t,n){"use strict";(function(o){var s,l=n(693);void 0===(s=function(){return o.Model.extend({url:"myFileManager",getWorkflow:function(e,t){var n="Workflow/getWorkflow";e&&(n="Workflow/getWorkflow/"+e),(0,l.send)(n,null,{type:"GET"},t)},createTask:function(e,t){(0,l.send)("Workflow/createTask",e,{type:"POST"},t)},updateTask:function(e,t){(0,l.send)("Workflow/updateTask",e,{type:"PUT"},t)},updateTasksProperty:function(e,t){(0,l.send)("Workflow/updateTasksProperty",e,{type:"PUT"},t)},deleteTask:function(e,t){(0,l.send)("Workflow/deleteTask/"+e,null,{type:"DELETE"},t)},getTask:function(e,t){(0,l.send)("Workflow/getTask/"+e,null,null,t)},createState:function(e,t){(0,l.send)("Workflow/createState/",e,{type:"POST"},t)},listStates:function(e){(0,l.send)("Workflow/listStates",null,{type:"GET"},e)},getState:function(e,t){(0,l.send)("Workflow/getState/"+e,null,{type:"GET"},t)},updateState:function(e,t){(0,l.send)("Workflow/updateState",e,{type:"PUT"},t)},deleteState:function(e,t){(0,l.send)("Workflow/deleteState/"+e,null,{type:"DELETE"},t)},listTransitions:function(e){(0,l.send)("Workflow/listTransitions",null,{type:"GET"},e)},createTransition:function(e,t){(0,l.send)("Workflow/createTransition",e,{type:"POST"},t)},updateTransition:function(e,t){(0,l.send)("Workflow/updateTransition",e,{type:"PUT"},t)},deleteTransition:function(e,t){(0,l.send)("Workflow/deleteTransition/"+e,null,{type:"DELETE"},t)},listUsers:function(e){(0,l.send)("Workflow/listUsers",null,null,e)},getTaskGroup:function(e,t){(0,l.send)("Workflow/getTaskGroup/"+e,null,{type:"GET"},t)},listTaskGroups:function(e){(0,l.send)("Workflow/listTaskGroups",null,{type:"GET"},e)},createTaskGroup:function(e,t){(0,l.send)("Workflow/createTaskGroup",e,{type:"POST"},t)},updateTaskGroup:function(e,t){(0,l.send)("Workflow/updateTaskGroup",e,{type:"PUT"},t)},deleteTaskGroup:function(e,t){(0,l.send)("Workflow/DeleteTaskGroup/"+e,null,{type:"DELETE"},t)},updateOrder:function(e,t){(0,l.send)("Workflow/ChangeOrder",{values:e},{type:"PUT"},t)},updateRolTransitions:function(e,t){(0,l.send)("Workflow/updateRolTransitions",e,{type:"PUT"},t)},getWorkflowByGroups:function(e,t){(0,l.send)("Workflow/getWorkflowByGroups/",{values:e},{type:"POST"},t)},createComment:function(e,t){(0,l.send)("Workflow/createComment/",e,{type:"POST"},t)}})}.apply(t,[]))||(e.exports=s)}).call(this,n(218))}}]);